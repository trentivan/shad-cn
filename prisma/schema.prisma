// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  nombre     String
  correo     String   @unique
  rol        String   // 'admin', 'colaborador', 'externo'
  agenciaId  Int?
  agencia    Agencia? @relation("AgenciaUsuarios", fields: [agenciaId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  contrasena String
  estado     String   @default("Activo") // 'Activo', 'Inactivo'
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model LogisticTable {
  id          Int      @id @default(autoincrement())
  vessel      String
  loa         Float
  operationTime String
  eta         DateTime
  pob         DateTime
  etb         DateTime
  etc         DateTime
  etd         DateTime
  cargo       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Agencia {
  id          Int      @id @default(autoincrement())
  nombre      String
  tipo        String   // 'materia prima' | 'producto terminado' | 'servicio'
  telefono    String
  correo      String
  estado      String   @default("Activo") // 'Activo', 'Inactivo'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  buques      Buque[]  @relation("AgenciaBuques")
  usuarios    User[]   @relation("AgenciaUsuarios")
}

model Buque {
  id          Int      @id @default(autoincrement())
  nombre      String
  agenciaId   Int
  agencia     Agencia? @relation("AgenciaBuques", fields: [agenciaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tipo        String   // materia prima | producto terminado | servicio
  loa         Float?
  estado      String   @default("Activo") // 'Activo', 'Inactivo'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TablaMeta {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique // Ej: "logistica"
  ultimaModificacion DateTime
}